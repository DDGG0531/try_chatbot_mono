generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id // Google profile id
  displayName String
  email       String?  @unique
  photo       String?
  provider    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  conversations Conversation[]
  knowledgeBases KnowledgeBase[]
}

model Conversation {
  id          String    @id @default(cuid())
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  title       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  messages    Message[]

  @@index([userId, createdAt])
}

model Message {
  id             String       @id @default(cuid())
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  role           String       // 'system' | 'user' | 'assistant' | 'tool'
  content        String
  createdAt      DateTime     @default(now())
  reference      String
  @@index([conversationId, createdAt])
}

// M3: RAG v1 - 基礎 KB 與文件模型
model KnowledgeBase {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  name        String
  description String?
  isPublic    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  documents   Document[]

  @@index([userId, createdAt])
}

model Document {
  id        String        @id @default(cuid())
  kbId      String
  kb        KnowledgeBase @relation(fields: [kbId], references: [id], onDelete: Cascade)
  question  String?
  answer    String?
  content   String?
  extra     Json?
  vector    Unsupported("vector")
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  @@index([kbId, createdAt])
}
